---
kind: pipeline
type: docker
name: backend

volumes:
- name: docker
  host:
    path: /var/run/docker.sock
- name: site-packages
  host:
    path: /tmp/drone/cache/site-packages

steps:
  - name: publish-api
    image: plugins/docker
    volumes:
    - name: docker
      path: /var/run/docker.sock
    - name: site-packages
      path: /usr/local/lib/python3.10/site-packages
    settings:
      repo: ccr.ccs.tencentyun.com/franktrue/fupanhezi-admin-api
      registry: ccr.ccs.tencentyun.com
      password: 
        from_secret: tencent_tcr_password
      username: 
        from_secret: tencent_id
      dockerfile: docker_env/django/Dockerfile
      tags:
      - latest
      dry_run: false

  - name: publish-celery
    image: plugins/docker
    volumes:
    - name: docker
      path: /var/run/docker.sock
    - name: site-packages
      path: /usr/local/lib/python3.10/site-packages
    settings:
      repo: ccr.ccs.tencentyun.com/franktrue/fupanhezi-admin-celery
      registry: ccr.ccs.tencentyun.com
      password: 
        from_secret: tencent_tcr_password
      username: 
        from_secret: tencent_id
      dockerfile: docker_env/celery/Dockerfile
      tags:
      - latest
      dry_run: false

trigger:
  event:
    - push
    - pull_request
  branch:
    - main
  
---
kind: pipeline
type: docker
name: frontend

workspace:
  path: /drone/src

volumes:
- name: node_modules # 数据卷名称
  host: # Host Volume
    path: /tmp/drone/cache/node_modules # 宿主机目录    #绝对路径

steps:
  - name: build
    image: node:16.20.0
    volumes: # 挂载数据卷
      - name: node_modules # 数据卷名称
        path: /drone/src/web/node_modules # 容器内目录 绝对路径
    commands:
      - cd web
      - npm install --registry=https://registry.npm.taobao.org
      - npm run build
  - name: publish-web
    image: plugins/docker
    settings:
      repo: ccr.ccs.tencentyun.com/franktrue/fupanhezi-admin-web
      registry: ccr.ccs.tencentyun.com
      password: 
        from_secret: tencent_tcr_password
      username: 
        from_secret: tencent_id
      dockerfile: docker_env/web/DockerfileBuild
      tags:
      - latest
      dry_run: false

trigger:
  event:
    - push
    - pull_request
  branch:
    - main

# ---
# kind: pipeline
# type: docker
# name: deploy
# depends_on: ["backend", "frontend"]

# steps:
#   - name: sync-file
#     image: drillster/drone-rsync
#     settings:
#       user: root
#       key:
#         from_secret: ssh_key
#       hosts: # 多个ip使用,隔开
#         from_secret: ssh_host
#       # 来源目录
#       source: docker_env/deploy
#       # 目标服务器目录
#       target: /mnt/data/wwwroot/fupanhezi/admin
#       script:
#         - cd /mnt/data/wwwroot/fupanhezi/admin
#         - docker-compose restart
#         - echo "Deploy Success"
